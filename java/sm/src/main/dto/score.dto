export org.napbad.scoremanager.model.entity.Score
    -> package org.napbad.scoremanager.model.dto.score

import org.napbad.scoremanager.model.functional.ScoreSort
input ScoreCreateInput {
    id

    regularScore
    midtermScore
    labScore
    finalScore
    totalScore

    classesId
    studentId
}

ScoreQueryRes {
    id
    classesId
    studentId

    regularScore
    midtermScore
    labScore
    finalScore
    totalScore

    classes {
        id
        courseId
        course {
            id
            courseName
            courseCode
        }
        semester
    }

    student {
        id
        name
        identifier
        gender
    }
}

input ScoreUpdateInput {
    id

    dynamic regularScore
    dynamic midtermScore
    dynamic labScore
    dynamic finalScore

    dynamic classesId?
    dynamic studentId?
}

specification ScoreSpecification {
    id

    ge(regularScore)
    ge(midtermScore)
    ge(labScore)
    ge(finalScore)
    ge(totalScore)

    le(regularScore)
    le(midtermScore)
    le(labScore)
    le(finalScore)
    le(totalScore)

    classes {
        id
        courseId
        semester
    }
    student {
        id
        name
        identifier
        gender
    }

    REGULAR_SCORE_ASC : ScoreSort?
    REGULAR_SCORE_DESC : ScoreSort?
    MIDTERM_SCORE_ASC : ScoreSort?
    MIDTERM_SCORE_DESC : ScoreSort?
    LAB_SCORE_ASC : ScoreSort?
    LAB_SCORE_DESC : ScoreSort?
    FINAL_SCORE_ASC : ScoreSort?
    FINAL_SCORE_DESC : ScoreSort?
    TOTAL_SCORE_ASC : ScoreSort?
    TOTAL_SCORE_DESC : ScoreSort?

    STUDENT_ID_ASC : ScoreSort?
    STUDENT_ID_DESC : ScoreSort?
    CLASS_ID_ASC : ScoreSort?
    CLASS_ID_DESC : ScoreSort?
    COURSE_ID_ASC : ScoreSort?
    COURSE_ID_DESC : ScoreSort?
    SEMESTER_ASC : ScoreSort?
    SEMESTER_DESC : ScoreSort?
    TOTAL_STUDENTS_ASC : ScoreSort?
    TOTAL_STUDENTS_DESC : ScoreSort?
    COURSE_NAME_ASC : ScoreSort?
    COURSE_NAME_DESC : ScoreSort?
}