# 配置Spring数据源
spring:
    profiles:
        include: dev

    datasource:
        # MySQL驱动类名
        driver-class-name: ${sm.datasource.driver-class-name}
        # 数据库连接URL
        url: ${sm.datasource.url}
        # 数据库用户名
        username: ${sm.datasource.username}
        # 数据库密码
        password: ${sm.datasource.password}
        # 数据源类型，使用Druid连接池
        type: ${sm.datasource.type}


    # Redis配置
    data:
        redis:
            # Redis连接地址
            host: ${sm.data.redis.host}
            # Redis端口
            port: ${sm.data.redis.port}
            # 默认数据库索引
            database: ${sm.data.redis.database}
            # Redis密码
            password: ${sm.data.redis.password}
            # 连接超时时间
            connect-timeout: ${sm.data.redis.connect-timeout}
            # 读取操作超时时间
            timeout: ${sm.data.redis.timeout}
            lettuce:
                # 连接池配置
                pool:
                    # 最小空闲连接数
                    min-idle: ${sm.data.redis.lettuce.pool.min-idle}
                    # 最大空闲连接数
                    max-idle: ${sm.data.redis.lettuce.pool.max-idle}
                    # 最大活动连接数
                    max-active: ${sm.data.redis.lettuce.pool.max-active}
                    # 从连接池获取连接的最大超时时间
                    max-wait: ${sm.data.redis.lettuce.pool.max-wait}
    # 邮件服务配置
#    mail:
#        protocol: ${sm.mail.protocol}
#        host: ${sm.mail.host}
#        port: ${sm.mail.port}
#        username: ${sm.mail.username}
#        password: ${sm.mail.password}
#        test-connection: ${sm.mail.test-connection}
#        properties:
#            mail:
#                smtp:
#                    auth: ${sm.mail.properties.mail.smtp.auth}
#                debug: ${sm.mail.properties.mail.debug}
#                mime:
#                    parameterization: ${sm.mail.properties.mail.mime.parameterization}
    application:
        name: service-sm

    threads:
        virtual:
            enabled: true

logging:
    level:
        web: info
        org: info
        com: info
        org.sm: info


# 服务器配置
server:
    port: ${sm.server.port}



# Jimmer ORM配置
jimmer:
    dialect: org.babyfish.jimmer.sql.dialect.MySqlDialect
    client:
        ts:
            path: /ts.zip
        openapi:
            path: /openapi.yml
            ui-path: /openapi.html
            properties:
    show-sql: true
    pretty-sql: true


sm:
    key:
        name: ${sm.key.name}
        key: ${sm.key.key}
        secret: ${sm.key.secret}

    jwt:
        secretKey: ${sm.jwt.secretKey}
        ttl: ${sm.jwt.ttl}
        tokenName: ${sm.jwt.tokenName}
    auth:
        exclude:
            exclude-paths:
                - /user/login
                - /user/register
                - /user/verify
                - /openapi.html
                - /openapi.yml
                - /ts.zip

